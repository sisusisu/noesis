<?xml version="1.0"  encoding="ISO-8859-1" ?> 
<?xml-stylesheet type="text/xsl" href="../book.xsl"?>


<!-- Classes -->

<document>
<tag>graph-theory-classes</tag>
<title>Interesting classes of graphs</title>

<text>
Some kinds of graphs appear so often in practice that it is worthwhile to examine them in some detail.
</text>

<!-- Paths and cycles --> 

<document>
<tag>graph-theory-pc</tag>
<title>Paths and cycles</title>

<text>
Paths and cycles are important kinds of graphs, often obtained as subgraphs of larger graphs:
</text>

<list>

<item>
A path <eqn>P_n</eqn> is a graph of order n and size n-1 whose vertices can be labeled <eqn>v_1, v_2, ..., v_n</eqn> and whose edges are <eqn>v_iv_{i+1}</eqn> for <eqn>i=1,2,...,n-1</eqn>. Some authors call them <q>line graphs</q>. In them, all internal nodes have degree 2, whereas the nodes at the extremes have degree 1. Paths are strongly connected and it is easy to see that an Eulerian path exists from the first to the last node in the path.
</item>

<item>
A cycle <eqn>C_n</eqn> is a graph of order n and size n whose whose vertices can be labeled <eqn>v_1, v_2, ..., v_n</eqn> and whose edges are <eqn>v_1v_n</eqn> and <eqn>v_iv_{i+1}</eqn> for <eqn>i=1,2,...,n-1</eqn>. Due to their topology, they are often called <q>rings</q>. In ring graphs, all their nodes are connected to their predecessor and successor nodes, hence their degree is always 2. As paths, cycles are strongly connected and they are also Eulerian graphs, since the full cycle completes an Eulerian tour through the graph. It should be noted that <eqn>C_3</eqn> is the smallest possible cycle, of length 3. <eqn>C_3</eqn> is often referred to as a triangle or triad.
</item>

</list>

<text>
Albeit the topology of paths and rings looks similar, since they just differ in a single link, their properties are quite different. In rings, there are two different paths between any pair of nodes. This reduces the average path length between pairs of nodes, from <eqn>(n+1)/3</eqn> in paths to <eqn>(n+1)/4</eqn> for odd-length rings and <eqn>n^2/(4n-4))</eqn> for even-length rings <cite>Lewis 2009</cite>. It also influences the robustness of the network, since a single link removal disconnects a path, which has a bus-like topology if the use the common terminology in computer networks, while we would have to remove two links to split a ring into two buses.
</text>

<figure>
  <tag>fig-paths-cycles</tag>
  <image scale="40" file="image/graphs/path"/>
  <image scale="30" file="image/graphs/ring"/>
  <title>A simple path, <eqn>P_5</eqn>, and a ring or cycle, <eqn>C_9</eqn>.</title>
</figure>

</document>


<!-- Regular graphs -->

<document>
<tag>graph-theory-regular</tag>
<title>Regular graphs</title>

<text>
When all the nodes in a graph have the same degree (say r), the graph is said to be a regular graph,
more precisely an r-regular graph. A regular graph is said to be regular of degree r when its nodes have the degree r.
</text>

<text>
The cycles or rings we have just analyzed, <eqn>C_n</eqn>, are the simplest example of regular graphs, 2-regular graphs in this case.
</text>

<text>
It is easy to see that r-regular graphs with <eqn>n</eqn> nodes contain <eqn>r*n/2</eqn> links. 
</text>

<text>
For small values of r, r-regular graphs are sparse, since their size is proportional to their order; i.e. <eqn>m = r*n/2 \in O(n)</eqn> for small values of <eqn>r</eqn>. For large values of r, however, r-regular graphs are dense, being complete graphs the densest possible graphs.
</text>

<text>
If we define the graph density as the ratio between the links it contains and the number of links in a complete graph, i.e. <eqn>d(G)=m/(n(n-1))</eqn> for simple graphs, the density of an r-regular graph is <eqn>d(R)=r/(2n-2)</eqn>. In other words, their density grows linearly with <eqn>r</eqn> while, in general, it grows sublinearly for arbitrary graphs.
</text>

<text>
When <eqn>r</eqn> is even, an r-regular graph can be decomposed into <eqn>r/2</eqn> disjoint cycles of size <eqn>n</eqn>. The same is not true for odd values of <eqn>r</eqn>.
</text>

<text>
The following theorem establishes the existence of regular graphs for given values of r and n: For integer r and n, there is an r-regular graph of n nodes if and only if <eqn>0 \leq r \leq n-1</eqn> and r and n are not both odd. The last condition is just a consequence of the fact that every graph must have an even number of nodes with odd degrees.
</text>

<text>
At the opposite extreme of the spectrum of regularity, an graph would be irregular if <eqn>deg(u) \neq deg(v)</eqn> for every two vertices of the graph. Such a graph, however, cannot exist, given that an irregular graph with n nodes would have a degree sequence given by <eqn>deg(v_i)=i-1</eqn>. This would imply that one node in the graph would be isolated, i.e. <eqn>deg(v_1)=0</eqn>, which is a contradiction with the fact that <eqn>deg(v_n)=n-1</eqn>, since <eqn>v_1</eqn> should also be adjacent to <eqn>v_n</eqn>.
</text>

<document>
<title>Complete graphs</title>

<text>
In a complete graph, every two distinct edges are adjacent, i.e. the size of a complete graph of order <eqn>n</eqn> is <eqn>n(n-1)/2</eqn>. The complete graph of order <eqn>n</eqn> is denoted by <eqn>K_n</eqn>. 

The complete graph Kn has n vertices (that is, |V | = n) and all two-element subsets of V as edges. 

The graph <eqn>K_n</eqn> is <eqn>(n-1)</eqn>-regular and its size is <eqn>n(n-1)/2</eqn>. Its (vertex) connectivity and edge connectivity are maximum: <eqn>\kappa(K_n) = \lambda(K_n) = n-1</eqn>.
</text>

<text>
Complete graphs are the densest possible graphs because they contain the maximum number of links if we do not allow multiedges and loops. Since every node is connected to every other node, their average path length is 1.
</text>

<list>

<item>
The simplest complete graph, <eqn>K_2</eqn>, with two nodes and a single link connecting them, is the <q>barbell</q> (due to the similarity of its drawing to the bar used in weightlifting with heavy discs attached at its ends).
</item>

<item>
The next complete graph, <eqn>K_3</eqn>, is just a cycle of length three, sometimes denoted by <eqn>C_3</eqn> and also known as a triangle or triad.
</item>

<item>
The complete graph with four nodes,<eqn>K_4</eqn>, can still be depicted without line crossings, hence it is a planar graph.
</item>

<item>
The following complete graph, however, is not planar: No matter how you try to draw <eqn>K_5</eqn>, some lines will necessarily cross. Since <eqn>K_5</eqn> is 4-regular, it can be decomposed into two <eqn>C_5</eqn> cycles.
</item>

</list>

<figure>
  <tag>fig-k2</tag>
  <image scale="20" file="image/graphs/barbell"/>
  <title>The complete graph <eqn>K_2</eqn>: a barbell.</title>
</figure>

<figure>
  <tag>fig-k3</tag>
  <image scale="15" file="image/graphs/triangle"/>
  <title>The complete graph <eqn>K_3</eqn>: a triangle.</title>
</figure>

<figure>
  <tag>fig-k4</tag>
  <image scale="25" file="image/graphs/k4"/>
  <image scale="25" file="image/graphs/k4-alt"/>
  <title>Two depictions of the complete graph <eqn>K_4</eqn>.</title>
</figure>

<figure>
  <tag>fig-k5</tag>
  <image scale="30" file="image/graphs/k5"/>
  <title>The complete graph <eqn>K_5</eqn>.</title>
</figure>


<text>
++ tournament (orientation of a complete graph)

J: "Replacing each edge of the form (a, b) by an undirected edge {a, b}, we obtain the underlying multigraph |G|. Replacing parallel
edges in |G| by a single edge, we get the underlying graph (G). Conversely, let G = (V,E) be a multigraph. Any directed multigraph H with |H| = G is
called an orientation of G. Replacing each edge ab in E by two arcs (a, b) and (b, a), we get the associated directed multigraph
\overrightarrow{G}; we also call \overrightarrow{G} G the complete orientation of G. The complete orientation of Kn is called the complete
digraph on n vertices."
</text>


</document>


<document>
<title>Cubic graphs</title>

<text>
A cubic graph is a graph in which all vertices have degree three, i.e. a 3-regular graph. Cubic graphs are also called trivalent graphs.

Their (vertex) connectivity and edge connectivity always coincide, i.e. <eqn>\kappa(K_n) = \lambda(K_n)</eqn>, and they can be either 1 or 2.

There are many well-known individual cubic graphs, including the complete graph <eqn>K_4</eqn>, the utility graph (<eqn>K_{3,3}</eqn>), the Petersen graph, the Heawood graph, the Möbius-Kantor graph, the Pappus graph, the Desargues graph, the Nauru graph, the Coxeter graph, the Tutte-Coxeter graph (a.k.a. Tutte eight-cage), the Dyck graph, the Foster graph, or the Biggs-Smith graph.

For instance, the Petersen graph is an undirected small regular graph, named after the Danish mathematician Julius Petersen, who initiated the study of regular graphs in 1891. The Petersen graph, which includes 10 vertices and 15 edges, is often employed as an useful example or counterexample for many proofs in graph theory.
</text>

<figure>
  <tag>fig-petersen</tag>
  <image scale="30" file="image/graphs/petersen"/>
  <title>The Petersen graph, a typical example of cubic graph.</title>
</figure>

</document>

<!--
<document>
<title>Triangular graphs</title>

J: he triangular graph Tn has as vertices the two-element subsets of a set with n elements. Two of these vertices are adjacent if and only if their intersection is not empty. Obviously, Tn is a (2n-4)-regular graph. 

Tn has even stronger regularity properties: the number of vertices adjacent to two given vertices x, y depends only on whether x and y
themselves are adjacent or not. Such a graph is called a strongly regular graph, abbreviated by SRG.

SRG: Tn has parameters a = 2n - 4, c = n - 2 and d = 4, where a is the degree of any vertex, c is the number of vertices adjacent to both x and y if x and y are adjacent, and d is the number of vertices adjacent to x and y if x and y are not adjacent. Let G be an SRG with parameters a, c, and d having n vertices. Its complementary graph \overline{G} is also an SRG. 

Theorem: a(a - c - 1) = (n - a - 1)d.

</document>
-->


</document>



<document>
<tag>graph-theory-lattices</tag>
<title>Lattices</title>

<text>
Wikipedia: The terms lattice graph, mesh graph, or grid graph refer to a number of categories of graphs whose drawing corresponds to some grid/mesh/lattice, i.e., its vertices correspond to the nodes of the mesh and its edges correspond to the ties between the nodes.
</text>

<text>
e.g.

+ Square grid graph

A common type of a lattice graph (known under different names, such as square grid graph) is the graph whose vertices correspond to the points in the plane with integer coordinates, x-coordinates being in the range 1,..., n, y-coordinates being in the range 1,..., m, and two vertices are connected by an edge whenever the corresponding points are at distance 1. In other words, it is a unit distance graph for the described point set (a unit distance graph is a graph formed from a collection of points in the Euclidean plane by connecting two points by an edge whenever the distance between the two points is exactly one.)

A square grid graph is a Cartesian product of graphs, namely, of two path graphs with n - 1 and m - 1 edges.[1] Since a path graph is a median graph, the latter fact implies that the square grid graph is also a median graph. All grid graphs are bipartite.
A path graph may also be considered to be a grid graph on the grid n times 1. A 2x2 grid graph is a 4-cycle.[1]


+ A triangular grid graph is a graph that corresponds to a triangular grid.

+ A Hanan grid graph for a finite set of points in the plane is produced by the grid obtained by intersections of all vertical and horizontal lines through each point of the set.

+ The rook's graph (the graph that represents all legal moves of the rook chess piece on a chessboard) is also sometimes called the lattice graph.

+ The hypercube graph Qn is a regular graph with 2n vertices, which correspond to the subsets of a set with n elements. Two vertices labelled by subsets W and B are joined by an edge if and only if W can be obtained from B by adding or removing a single element.
Each vertex of Qn is incident to exactly n edges (that is, Qn is n-regular), so, by the handshaking lemma the total number of edges is 2n-1n.
The name comes from the fact that the hypercube graph is the one-dimensional skeleton of the geometric hypercube.
Hypercube graphs should not be confused with cubic graphs, which are graphs that are 3-regular. The only hypercube that is a cubic graph is Q3.
· Another definition of Qn is the Cartesian product of n two-vertex complete graphs K2.
· every hypercube Qn is Hamiltonian for n > 1.
· every hypercube is a bipartite graph
· is planar (can be drawn with no crossings) if and only if n &lt;= 3.
e.g. The graph Q0 consists of a single vertex, while Q1 is the complete graph on two vertices and Q2 is a cycle of length 4. The graph Q3 is the 1-skeleton of a cube, a planar graph with eight vertices and twelve edges. 
</text>

<figure>
  <tag>fig-grid</tag>
  <image scale="30" file="image/graphs/grid"/>
  <title>A simple 5x4 2D grid.</title>
</figure>

</document>



<document>
<tag>graph-theory-bipartite</tag>
<title>Bipartite graphs</title>

<text>
a bipartite network, also called a two-mode network in the sociology literature... two kinds of vertices, one representing the original vertices and the other representing the groups to which they belong... The edges in a bipartite network run only between vertices of different types...
</text>

<text>
A graph G is bipartite if its vertex set V(G) can be partitioned into two disjoint sets V_1 and V_2 (called partite sets) so that every edge in G joins a node in L with a node in R.
</text>

<text>
If a bipartite graph is regular, then |L|=|R| and its size will be r|L|=r|R| assuming that it is r-regular. 
</text>

<text>
A bipartite graph is said to be a complete bipartite graph if it is bipartite and uv is an edge of G if and only if u \in L and w \in R.

The complete bipartite graph Ks,t has as vertex set the disjoint union of a set V1 with s elements and a set V2 with t elements; edges are all the
sets {a, b} with a in V1 and b in V2. 

Since the size of the complete bipartite graph <eqn>K_{\lfloor n/2 \rfloor, \lceil n/2 \rceil}</eqn> is <eqn>\lfloor n/2 \rfloor \cdot \lceil n/2 \rceil = \lfloor n^2/4 \rfloor</eqn>, no bipartite graph can have a larger size than <eqn>\lfloor n^2/4 \rfloor</eqn>.

From the previous result, we can conclude that every graph with more than two nodes and size larger than <eqn>\lfloor n^2/4 \rfloor</eqn> necessarily contains a triangle.

Obviously, the graph Ks,t is regular only if s = t (in that case, it is s-regular). 
</text>

<figure>
  <tag>fig-k33</tag>
  <image scale="30" file="image/graphs/k33"/>
  <image scale="20" file="image/graphs/k33pos"/>
  <title>Two different renderings of the complete bipartite graph <eqn>K_{3,3}</eqn>.</title>
</figure>


<text>
- The utility graph, also known as the Thomsen graph or K_{3,3}: cubic (3-regular), nonplanar graph.

- The complete bipartite graph K_{1,t} is called a star, a special kind of tree.
</text>

<text>
Generalization: s-partite graphs, with s partite sets.
</text>

<text>
IMPORTANT: Representation of hypergraphs:

N:  A hypergraph and corresponding bipartite graph. These two networks show the same informationthe membership of five vertices in four different groups. (a) The hypergraph representation in which the groups are represented as hyperedges, denoted by the loops circling sets of vertices. (b) The bipartite representation in which we introduce four new vertices (open circles) representing the four groups, with edges connecting each vertex to the groups to which it belongs.

Examples...

Apart from groups: who is or has been married to whom within a population (two kinds of vertices corresponding to men and women and the edges between them, marriages, except in some countries such as Spain or Canada, where same-sex marriages are allowed)
</text>

</document>


<document>
<tag>graph-theory-trees</tag>
<title>Trees</title>

<text>
Trees are connected acyclic graphs.

- connected graph with n-1 edges and n nodes.
- every edge is a bridge, since there are no cycles.
- every two nodes are connected by a unique path.

DEFINITION

Let G be a graph with n vertices. Then any two of the following conditions imply the third:
(a) G is connected.
(b) G is acyclic.
(c) G has n - 1 edges.
graph T for which the conditions of Theorem 1.2.8 hold is called a tree.
A vertex of T with degree 1 is called a leaf.  ++ Juningkel Chapter 4.
</text>

<text>
Let (d1, . . . , dn) be a sequence of positive integers. Show
that there is a tree on n vertices having degrees d1, . . . , dn if and only if
d1 + . . . + dn = 2(n - 1),
</text>



<text>
A forest is a graph without cycles, i.e. a graph whose connected components are trees. Obviously, a forest of n nodes with k connected components has n-k links.
</text>

<text>
e.g. A river network is an example of a naturally occurring tree, hierarchies (e.g. dendrogram), ubiquitous in Computer Science. 
</text>

<text>
Properties:
- there is exactly one path between any pair of vertices. (e.g. the calculation of a networks diameter (Section 6.10.1), the betweenness centrality of a vertex (Section 7.7), and certain other properties based on shortest paths are all relatively easy with a tree.)
- a tree is the connected network on n vertices with the minimum number of edges, since no connected network has less than n - 1 edges
- adding an extra edge (gray) between any two vertices of a tree creates a cycle
</text>

<text>
Trees are recursive structures, since cutting any edge leaves two smaller trees.
</text>


<text>
++ Rooted vs. free:

- Rooted trees define a hierarchical order, emanating from a single source node
identified as the root.
- Free trees do not encode any structure beyond their connection topology.
</text>

<text>
J: Directed trees can never be strongly connected; here, of course, a digraph
G is called a tree if its underlying graph |G| is a tree. If G has a root r, we call G a directed tree, an arborescence or a branching with root r.

Clearly, given any vertex r, an undirected tree has exactly one orientation as a directed tree with root r.
</text>

<text>
There are several well-known classes of trees:
</text>

<list>
<item>Paths <eqn>P_n</eqn>, which are the trees with the minimum number of leaves (just <eqn>2</eqn> of them).</item>
<item>Stars <eqn>K_{1,n-1}</eqn>, which are the trees with the maximum possible number of leaves: <eqn>n-1</eqn> leaves.</item>
<item>Double stars, i.e. a tree containing exactly two non-leaves, which must be adjacent.</item>
<item>Caterpillars, when the removal of the tree leaves produces a path (the spine of the caterpillar). Paths, stars, and double stars are also caterpillars.</item>
</list>

<figure>
  <tag>fig-trees</tag>
  <image scale="20" file="image/graphs/star"/>
  <image scale="35" file="image/graphs/double-star"/>
  <image scale="50" file="image/graphs/caterpillar"/>
  <title>Well-known kinds of trees: stars, double stars, and caterpillars.</title>
</figure>


<text>
By f(n, s) we denote the number of forests G having n vertices and exactly s connected components,
for which s fixed vertices are in distinct components; in particular, the number
of trees on n vertices is f(n, 1). Cayley's theorem gives a formula for the numbers f(n, s)
</text>

<equation>
f(n, s) = sn^{n-s-1}
</equation>

<document>
<title>Prüfer codes</title>

<text>
As a corollary, we can conclude that the number of trees on <eqn>n</eqn> vertices is <eqn>n^{n-2}</eqn>, which is also the cardinality of the set of
words of length <eqn>n-2</eqn> over an alphabet with <eqn>n</eqn> elements. We can then specify a bijection between both sets: the set of trees with <eqn>n</eqn> nodes and the set of words of length <eqn>n-2</eqn> over <eqn>n</eqn> symbols. The Prüfer code is such a bijection and it allows us to represent trees as strings of <eqn>n-2</eqn> integers.
</text>


<text>
++ Prüfer codes (parents) [Prü 1918]

J: As we will need an ordering of the elements of V , we assume in what follows, without loss of generality, that V is a subset of N.
Thus let G = (V,E) be a tree. 

For n = 2 the only tree on V is mapped to the empty word; that is, we put \pi_V (G) = (). For n \geq 3 we use the smallest leaf of G to construct a tree on n-1 vertices. We write v = v(G) = min{u \in V : deg_G(u) = 1} and denote by e = e(G) the unique edge incident with v, and by w = w(G)
the other end vertex of e.

Now let G' = G \ v. Then G' has n-1 vertices, and we may assume by induction that we know the word corresponding to G'
under the Prüfer code on V' = V \ {v}. Hence we can define recursively \pi_V (G) = (w, \pi_{V'} (G'))

It remains to show that we have indeed constructed the desired bijection. We need the following lemma which allows us to determine the minimal leaf of a tree G on V from its Prüfer code: 

Let G be a tree on V . Then the leaves of G are precisely those elements of V which do not occur in \pi_V (G). In particular,
v(G) = min{u \in V : u does not occur in \pi_V (G)}.
</text>

<text>
EXAMPLES: shows some trees and their Prüfer codes for n = 6, one for each isomorphism class <cite>Jungnickel 2007</cite>,
- (1 (2 (3 (4 (5 (6)))))) = (2,3,4,5)
- (1 (2 (3 (4 (5 6))))) = (2,3,4,4)
- (1 (2 (3 (4 5 6)))) = (2,3,3,3)
- (1 (2 (3 (4)) (5 (6)) )) = (2,3,2,5)
- (1 (2 (3 4 (5 6)))) = (2,2,4,4)
- (1 (2 3 4 5 6) = (1,1,1,1)
</text>

<figure>
  <tag>fig-trees</tag>
  <image scale="80" file="image/graphs/trees"/>
  <title>Trees with six nodes.</title>
</figure>

<text>
+ The degree of a node is one more than the number of times its value appears in the Prüfer sequence
</text>

<text>
a simple way to rank and unrank labeled trees and solve any tree generation problem: Exactly n^(n-2) labeled trees on n vertices, which correspond to that many strings of length n-2 on the alphabet {1..n}.

NOTE: There are two models for generating data such as permutations: ranking/unranking (biyective function) and incremental change methods (iterators). Ranking/unranking methods make it trivial to generate random data (just generate a random number and rank), whereas enumeration by incremental change methods makes it tricky to generate random data (e.g. needed to solve some hard problems using randomized algorithms)

e.g. permutations [Knuth05a]

INCORRECT (does not generate permutations uniformly!) 

for i=1..n 
  a[i] = i

for j=1..n-1
  swap( a[i], a[random(1,n)]

CORRECT VERSION

for i=1..n 
  a[i] = i

for j=1..n-1
  swap( a[i], a[random(i,n)]

</text>

</document>

<note>
<title>Spanning trees</title>

<text>
Cayley's tree formula, which states that there are <eqn>n^(n-2)</eqn> labeled trees of <eqn>n</eqn> nodes, can be interpreted from a different point of view: there can be <eqn>n^(n-2)</eqn> different spanning trees of the labeled complete graph <eqn>K_n</eqn>. Kirchhoff's matrix-tree theorem gives us the number of non-identical spanning trees of labeled graphs in general.
</text>

<!-- equal to the value of any cofactor of the degree matrix of G minus the adjacency matrix of G. -->
</note>

</document>



<document>
<tag>graph-theory-dag</tag>
<title>Directed acyclic graphs</title>

<text>
++ Directed acyclic graphs (DAGs), a.k.a. partial orders or posets, arise in many applications, e.g. scheduling and planning
</text>

<text>
Let <eqn>(M,\preceq)</eqn> be a partially ordered set, a poset for short. This is a set M together with a reflexive, antisymmetric and transitive relation <eqn>\preceq</eqn>. This set corresponds to a directed graph G having vertex set M and the pairs (x,y) with x \preceq y as edges. Because of transitivity, G is acyclic.
</text>

<text>
N: e.g. the classic example of an acyclic directed network is a citation network of papers. When writing a paper you can only cite another paper if it has already been written, which means that all the directed edges in a citation network point backward in time. In real citation networks... approximately acyclic: cycles when two papers cite each other (e.g. by the same author)
</text>

<text>
+ Topological sorting orders the vertices of a DAG respecting the precedence constraints imposed by the arcs in the DAG.

J: common problem is to check whether a given directed graph is acyclic
and, if this is the case, to find a topological sorting of its vertices. That is, we
require an enumeration of the vertices of G (labelling them with the numbers
1, . . . , n, say) such that i &lt; j holds for each edge ij. Such a sorting exists for every directed acyclic graph.
</text>

<text>
+ Let G be a directed acyclic graph. Then G contains at least one vertex with din(v) = 0.

JJ: we may choose a vertex v with din(v) = 0. Consider the directed graph H = G\ v. Obviously, H is acyclic as well and thus can be sorted topologically, using induction on the number of vertices, say by labelling the vertices as v2, . . . , vn. Then (v, v2, . . . , vn) is the desired topological sorting of G.
</text>

<text>
N: ... There must be at least one vertex somewhere on the network that has ingoing edges only and no outgoing ones. To see this consider starting from any vertex in the network and making a path across the network by following edges, each in the correct direction denoted by its arrow. Either such a path will eventually encounter a vertex with no outgoing edges, in which case we are done, or each vertex it encounters has one or more outgoing edges, in which case we choose one such edge and continue our path. If the path never reaches a vertex with no outgoing edges, then it must eventually arrive back at a vertex that has been visited previouslyat most we can visit all n vertices in the network once before the path either terminates or we are forced to revisit a vertex. However if we revisit a vertex then we have gone around a cycle in the network, which cannot be since the network is acyclic. Thus we must always in the end find a vertex with no outgoing edges and hence at least one such vertex always exists...
... Note that the particular order in which we select the vertices is not necessarily unique
</text>

<text>
J: Each partially ordered set may be embedded into a linearly
ordered set.
Proof. Let (v1, . . . , vn) be a topological sorting of the corresponding directed
acyclic graph. Then vi . vj always implies i &lt; j, so that v1 . . . . . vn is a
complete linear ordering
</text>

<text>
N:  So a simple algorithm for determining whether a network is acyclic is:1. Find a vertex with no outgoing edges.2. If no such vertex exists, the network is cyclic. Otherwise, if such a vertex does exist, remove it and all its ingoing edges from the network.3. If all vertices have been removed, the network is acyclic. Otherwise go back to step 1. 
</text>

<text>
Since every vertex in such a strongly connected must belong to at least one cycle (there must be a directed path from that vertex to every other in the component and a directed path from every other vertex to it, two paths that combined create a cycle). Therefore, directed acyclic graphs do not have strongly connected components with more than one vertex.
</text>

</document>



<document>
<tag>graph-theory-planar</tag>
<title>Planar graphs</title>


<text>
J: Let E be a set of line segments in three-dimensional Euclidean space and V the set of end points of the line segments in E. Identifying each line segment with the two-element set of its end points, we can consider (V,E) as a graph. Such a graph is called geometric if any two line segments in E are disjoint or have one of their end points in common.
Lemma 1.5.1. Every graph is isomorphic to a geometric graph.
</text>

<text>
J: We call a geometric graph plane if its line segments all lie
in one plane (often allows not only line segments, but
curves as well, e.g. they are necessary to represent multigraphs). 
Any graph isomorphic to a plane graph is called planar 
</text>

<text>
N: a planar network is a network that can be drawn on a plane without having any edges cross... The definition of planarity only specifies that at least one arrangement of the vertices exists that results in no crossing.


Figure 6.7: Two drawings of the K4 planar graph. (a) A small planar graph with four vertices and six edges. It is self-evident that the graph is planar, since in this depiction it has no edges that cross. (b) The same graph redrawn with two of its edges crossing. Even though the edges cross, the graph is still planara graph is planar if it can be drawn without crossing edges.


Most of the networks we will encounter in this book are not planar, either because there is no relevant two-dimensional geometry to which the network is confined (e.g., citation networks, metabolic networks, collaboration networks), or else there is but there is nothing to stop edges from crossing on it (e.g., the Internet, airline route maps, email networks). However, there are a few important examples of networks that are planar. First of all, all trees are planar. For some trees, such as river networks, this is obvious. Rivers never cross one another; they only flow together. In other cases, such as the trees used in computer data structures, there is no obvious two-dimensional surface onto which the network falls but it is planar nonetheless.
Among non-tree-like networks, some are planar for physical reasons. A good example is a road network. Because roads are confined to the Earths surface they form a roughly planar network. It does happen sometimes that roads meet without intersecting, one passing over the other on a bridge, so that in fact, if one wishes to be precise, the road network is not planar. However, such instances are rare (in the sense that there are far more places where roads intersect than there are bridges where they dont) and the network is planar to a good approximation.
Another example is the network of shared borders between countries, states, or provincessee Fig. 6.8. We can take a map depicting any set of contiguous regions, represent each by a vertex, and draw an edge between any two that share a border. It is easy to see that the resulting network can always be drawn without crossing edges provided the regions in question are formed of contiguous landmasses. Networks of this type, representing regions on a map, play an important role in the four-color theorem, a theorem that states that it is possible to color any set of regions on a two-dimensional map, real or imagined, with at most four colors such that no two adjacent regions have the same color, no matter how many regions there are or of what size or shape.  By constructing the network corresponding to the map in question, this problem can be converted into a problem of coloring the vertices of a planar graph in such a way that no two vertices connected by an edge have the same color. The number of colors required to color a graph in this way is called the chromatic number of the graph and many mathematical results are known about chromatic numbers. The proof of the four-color theoremthe proof that the chromatic number of a planar graph is always four or lessis one of the triumphs of traditional graph theory and was first given by Appel and Haken [20-22] in 1976 after more than a hundred years of valiant effort within the mathematics community
</text>

<text>
J: Thus,
the planar graphs are exactly those graphs which can be drawn in the plane
without additional points of intersection between the edges

Planar graphs, i.e. those that can be drawn on a plane without link crossings, are common in many applications. 
</text>

<text>
J: If we omit the line segments of G from the plane surface on which G is drawn, the remainder splits into a number
of connected open regions; the closure of such a region is called a face. 

Euler's formula). Let G be a connected planar graph with
n vertices, m edges and f faces. Then n - m + f = 2.

e.g. Euler's formula was applied to the vertices, edges and faces
of a convex polyhedron, which are planar; it is used, for example, to determine the five regular
polyhedra (or Platonic solids, namely the tetrahedron, octahedron, cube,
icosahedron and dodecahedron);
</text>

<text>
A bound on the number of edges of planar graphs:
Planar graphs are always sparse, since they have at most <eqn>3n-6</eqn> links. 
</text>

<text>
Trees, for instance, are always planar graphs.
</text>

<note>
<title>Graph homeomorphism</title>

<text>
J: A subdivision of a graph G is a graph H which can be derived from G by
applying the following operation any number of times: replace an edge e = ab
by a path (a, x1, . . . , xk, b), where x1, . . . , xk are an arbitrary number of new
vertices; that is, vertices which were not in a previous subdivision. For convenience,
G is also considered to be a subdivision of itself. 
</text>

<text>
J: Two graphs H and H' are called homeomorphic 
if they are isomorphic to subdivisions of the same
graph G.
</text>

</note>

<text>
J: the famous characterization of planar graphs:

Kuratowski's theorem: A graph G is planar if and only if it does not contain a subgraph which is homeomorphic to K5 or K3,3 (a.k.a. UG).

W: Two important characterizations of planar graphs, Kuratowski's theorem that the planar graphs are exactly the graphs that contain neither K3,3 nor the complete graph K5 as a subdivision, and Wagner's theorem that the planar graphs are exactly the graphs that contain neither K3,3 nor K5 as a minor, encompass this result.

N: Kuratowskis theorem is not, however, particularly useful for the analysis of real-world networks, because such networks are rarely precisely planar. (And if they are, then, as in the case of the shared border network of countries or states, it is usually clear for other reasons that they are planar and hence Kuratowskis theorem is unnecessary.) ...  a measure that could tell us, for example, that the road network of a country is 99% planar, even though there are a few bridges or tunnels here and there... no widely accepted metric for degree of planarity exists <cite>Newman 2010</cite>

J: another interesting characterization of planarity. If we identify
two adjacent vertices u and v in a graph G, we get an elementary contraction
of G; more precisely, we omit u and v and replace them by a new vertex w
which is adjacent to all vertices which were adjacent to u or v before
the resulting graph is usually denoted by G/e, where e = uv.
A graph G is called contractible to a graph H if
H arises from G by a sequence of elementary contractions. 

Wagner's theorem: A graph G is planar if and only if it does not contain a subgraph which is contractible to K5 or K3,3.
</text>

<text>
Example: The Petersen graph is not planar,
</text>

</document>


</document>


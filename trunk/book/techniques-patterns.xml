<?xml version="1.0"  encoding="ISO-8859-1" ?> 
<!DOCTYPE sys-ents [ <!ENTITY bibliography SYSTEM "bibliography.xml"> ]> 
<?xml-stylesheet type="text/xsl" href="../book.xsl"?>


<document>
&bibliography;
<title>Pattern Mining</title>

<text>
As in many other data mining domains, identifying frequent patterns in the original data is the first step towards the solution of many characterization, discrimination, classification, and cluster analysis problems. 
</text>

<document>
<tag>pattern-mining</tag>
<title>Frequent pattern mining</title>

<cite>Han and Kamber 2006</cite>, 9.1, 535-551

<text>
Han: Efficient methods have been developed for mining frequent subgraph patterns. They
can be categorized into Apriori-based and pattern growth–based approaches. The
Apriori-based approach has to use the breadth-first search (BFS) strategy because of
its level-wise candidate generation. The pattern-growth approach is more flexible with
respect to the search method.
</text>

<text>
<cite>Han et al. 2011</cite>, 13.1.2:
Graph pattern mining is the mining of frequent subgraphs (also called (sub)graph patterns) in one or a set of graphs. Methods for mining graph patterns can be categorized into Apriori-based and pattern growth–based approaches. Alternatively, we can mine the set of closed graphs where a graph g is closed if there exists no proper supergraph  that carries the same support count as g. Moreover, there are many variant graph patterns, including approximate frequent graphs, coherent graphs, and dense graphs. User-specified constraints can be pushed deep into the graph pattern mining process to improve mining efficiency.
</text>



<document>
<tag>pattern-mining-matching</tag>
<title>Graph matching</title>
</document>

<document>
<tag>pattern-mining-canonicalization</tag>
<title>Graph canonicalization</title>
</document>

<document>
<tag>pattern-mining-algorithms</tag>
<title>Algorithms for mining frequent subgraphs</title>

<document>
<tag>pattern-mining-search</tag>
<title>Beam search: SUBDUE</title>
</document>

<document>
<tag>pattern-mining-ilp</tag>
<title>Inductive logic programming: WARMR</title>
</document>

<document>
<tag>pattern-mining-apriori</tag>
<title>Apriori-like algorithms: AGM, FSG, "disjoint paths"</title>
</document>

<document>
<tag>pattern-mining-fpgrowth</tag>
<title>FPGrowth-like algorithms: gSpan, Gaston, CloseGraph</title>

<text>
Han: A typical pattern-growth method is gSpan, which explores additional optimization techniques in pattern growth and achieves high performance.
The further extension of gSpan for mining closed frequent graph patterns leads to the CloseGraph algorithm, which mines more compressed but complete sets of graph patterns, given a minimum support threshold.
</text>

</document>

</document>


<document>
<tag>pattern-mining-structures</tag>
<title>Frequent substructures</title>

<text>
Han: many interesting variant graph patterns, including approximate frequent
graphs, coherent graphs, and dense graphs. A general framework that considers constraints
is needed for mining such patterns. Moreover, various user-specific
constraints can be pushed deep into the graph pattern mining process to improve
mining efficiency.
</text>

</document>


</document>


<document>
<tag>pattern-mining-applications</tag>
<title>Applications</title>

<text>
Graph mining has a broad spectrum of applications in chemical informatics, bioinformatics,
computer vision, video indexing, text retrieval, and Web analysis <cite>Han and Kamber 2006</cite>.
</text>

<text>
<cite>Han et al. 2011</cite>, 13.1.2:
Graph pattern mining has many interesting applications. For example, it can be used to generate compact and effective graph index structures based on the concept of frequent and discriminative graph patterns. Approximate structure similarity search can be achieved by exploring graph index structures and multiple graph features. Moreover, classification of graphs can also be performed effectively using frequent and discriminative subgraphs as features
</text>


<cite>Han and Kamber 2006</cite>, 9.1.3, 551-555


<document>
<tag>pattern-mining-applications-indexing</tag>
<title>Indexing, e.g. GraphGrep, Grace, gIndex</title>

Han: compact and effective graph index structures using frequent and discriminative graph patterns.

</document>

<document>
<tag>pattern-mining-applications-retrieval</tag>
<title>Information retrieval, e.g. Grafil</title>

Han: Structure similarity search can be achieved by exploration of multiple graph features...

</document>

<document>
<tag>pattern-mining-applications-metadata</tag>
<title>Metadata mining: Schema mapping, schema discovery, schema reformulation</title>

<text>
<cite>Han and Kamber 2006</cite> 2ed: Multirelational data mining = Mining in a relational database often requires mining across multiple interconnected relations, which is similar to mining in connected graphs or networks.
</text>

</document>

</document>



<document>
<tag>patterns-notes</tag>
<title>Bibliographic notes</title>


<text>
<cite>Han and Kamber 2006</cite>:

FREQUENT SUBGRAPH MINING METHODS

Washio and Motoda performed a survey on graph-based data mining. 
[T.Washio and H. Motoda. State of the art of graph-based data mining. SIGKDD Explorations, 5:59–68, 2003.]

Many well-known pairwise isomorphism testing algorithms were developed, such as Ullmann’s Backtracking and McKay’s Nauty [McK81]. 
[J. R. Ullmann. An algorithm for subgraph isomorphism. J. ACM, 23:31–42, 1976.]
[B. D. McKay. Practical graph isomorphism. Congressus Numerantium, 30:45–87, 1981.]

ILP: Dehaspe, Toivonen, and King applied inductive logic programming to predict chemical carcinogenicity by mining frequent substructures. 
[L. Dehaspe, H. Toivonen, and R. King. Finding frequent substructures in chemical compounds. In Proc. 1998 Int. Conf. Knowledge Discovery and Data Mining (KDD’98), pages 30–36, New York, NY, Aug. 1998]

Several Apriori-based frequent substructure mining algorithms have been proposed, including AGM by Inokuchi, Washio, and Motoda,
FSG by Kuramochi and Karypis, and an edge-disjoint path-join algorithm by Vanetik, Gudes, and Shimony. 
[A. Inokuchi, T. Washio, and H. Motoda. An apriori-based algorithm for mining frequent substructures from graph data. In Proc. 2000 European Symp. Principle of Data Mining and Knowledge Discovery (PKDD’00), pages 13–23, Lyon, France, Sept. 1998.]
[M. Kuramochi and G. Karypis. Frequent subgraph discovery. In Proc. 2001 Int. Conf. Data Mining (ICDM’01), pages 313–320, San Jose, CA, Nov. 2001]
[N. Vanetik, E. Gudes, and S. E. Shimony. Computing frequent graph patterns from semistructured data. In Proc. 2002 Int. Conf. on DataMining (ICDM’02), pages 458–465, Maebashi, Japan, Dec. 2002.] 

Pattern-growth-based graph pattern mining algorithms include gSpan by Yan and Han, MoFa by Borgelt and Berthold, FFSM and SPIN by Huan, Wang, and Prins and Prins, Yang, Huan, and Wang, respectively, and Gaston by Nijssen and Kok. These algorithms were inspired by PrefixSpan for mining sequences, and TreeMinerV and FREQT for mining trees. 
[X. Yan and J. Han. gSpan: Graph-based substructure pattern mining. In Proc. 2002 Int. Conf. Data Mining (ICDM’02), pages 721–724, Maebashi, Japan, Dec. 2002.]
[C. Borgelt and M. R. Berthold. Mining molecular fragments: Finging relevant substructures of molecules. In Proc. 2002 Int. Conf. Data Mining (ICDM’02), pages 211–218, Maebashi, Japan, Dec. 2002.] e.g. discovery of active chemical structures in an HIV-screening data set by contrasting the support of frequent graphs between different classes. 
[J. Huan, W. Wang, and J. Prins. Efficient mining of frequent subgraph in the presence of isomorphism. In Proc. 2003 Int. Conf. Data Mining (ICDM’03), pages 549–552, Melbourne, FL, Nov. 2003.]
[J. Prins, J. Yang, J. Huan, and W.Wang. Spin: Mining maximal frequent subgraphs from graph databases. In Proc. 2004 ACMSIGKDD Int. Conf. KnowledgeDiscovery in Databases (KDD’04), pages 581–586, Seattle,WA, Aug. 2004]
[S. Nijssen and J. Kok. A quickstart in frequent structure mining can make a difference. In Proc. 2004ACMSIGKDD Int.Conf.KnowledgeDiscovery inDatabases (KDD’04), pages 647–652, Seattle,WA, Aug. 2004.]
[J. Pei, J.Han, B.Mortazavi-Asl, H. Pinto, Q. Chen, U. Dayal, and M.-C. Hsu. PrefixSpan: Mining sequential patterns efficiently by prefix-projected pattern growth. In Proc. 2001 Int. Conf. Data Engineering (ICDE’01), pages 215–224,Heidelberg, Germany, April 2001]
[M. J. Zaki. Efficiently mining frequent trees in a forest. In Proc. 2002 ACM SIGKDD Int. Conf.Knowledge Discovery in Databases (KDD’02), pages 71–80, Edmonton,Canada, July 2002.]
[T. Asai, K. Abe, S. Kawasoe, H. Arimura, H. Satamoto, and S. Arikawa. Efficient substructure discovery from large semi-structured data. In Proc. 2002 SIAM Int. Conf. Data Mining (SDM’02), pages 158–174, Arlington, VA, April 2002.]


A disk-based frequent graph mining method was proposed byWang,Wang, Pei, et al.
[C. Wang, W. Wang, J. Pei, Y. Zhu, and B. Shi. Scalable mining of large disk-base graph databases. In Proc. 2004 ACM SIGKDD Int. Conf. Knowledge Discovery in Databases (KDD’04), pages 316–325, Seattle,WA, Aug. 2004.]


Mining closed graph patterns was studied by Yan and Han, with the proposal
of the algorithm, CloseGraph, as an extension of gSpan and CloSpan.
[X. Yan and J. Han. CloseGraph: Mining closed frequent graph patterns. In Proc. 2003 ACM SIGKDD Int. Conf. Knowledge Discovery and Data Mining (KDD’03), pages 286–295,Washington, DC, Aug. 2003.]
[X. Yan, J. Han, and R. Afshar. CloSpan: Mining closed sequential patterns in large datasets. In Proc. 2003 SIAM Int. Conf. DataMining (SDM’03), pages 166–177, San Francisco, CA, May 2003.]

Holder, Cook, and Djoko proposed SUBDUE for approximate substructure pattern discovery based on minimum description length and background knowledge.
[L. B. Holder, D. J. Cook, and S. Djoko. Substructure discovery in the subdue system. In Proc. AAAI’94 Workshop Knowledge Discovery in Databases (KDD’94), pages 169–180, Seattle,WA, July 1994.]

Mining coherent subgraphs was studied by Huan, Wang, Bandyopadhyay, et al.
[J. Huan, W.Wang, D. Bandyopadhyay, J. Snoeyink, J. Prins, and A. Tropsha.Mining spatial motifs from protein structure graphs. In Proc. 8th Int. Conf. Research in Computational Molecular Biology (RECOMB), pages 308–315, San Diego, CA, March 2004.]

For mining relational graphs, Yan, Zhou, and Han proposed two
algorithms, CloseCut and Splat, to discover exact dense frequent substructures in a set
of relational graphs.
[X. Yan, X. J. Zhou, and J. Han. Mining closed relational graphs with connectivity constraints. In Proc. 2005 ACM SIGKDD Int. Conf. Knowledge Discovery in Databases (KDD’05), pages 357–358, Chicago, IL, Aug. 2005.]

Hu, Yan, Yu, et al. developed an algorithm called CoDense to find dense subgraphs across multiple biological networks.
[H. Hu, X. Yan, H. Yu, J. Han, and X. J. Zhou. Mining coherent dense subgraphs across
massive biological networks for functional discovery. In Proc. 2005 Int. Conf. Intelligent
Systems for Molecular Biology (ISMB’05), pages 213–221, Ann Arbor, MI, June 2005.]


APPLICATIONS
Many studies have explored the applications of mined graph patterns. 

Path-based graph indexing approaches are used in GraphGrep, developed by Shasha, Wang, and
Giugno, and in Daylight, developed by James,Weininger, and Delany.
[R. Giugno, D. Shasha, GraphGrep: A Fast and Universal Method for Querying Graphs.
Proceeding of the International Conference in Pattern recognition (ICPR), Quebec, Canada, August 2002.] 
[D. Shasha, J.T-L Wang, R. Giugno, Algorithmics and Applications of Tree and Graph Searching
Proceeding of the ACM Symposium on Principles of Database Systems (PODS), Madison, Wisconsin, June 2002.]
[C. A. James, D. Weininger, and J. Delany. Daylight theory manual daylight version 4.82. Daylight Chemical Information Systems, Inc, 2003.]

Frequent graph patterns were used as graph indexing features in the gIndex and Grafil methods proposed by Yan, Yu, and Han to perform fast graph search and structure similarity search. 
[X. Yan, P. S. Yu, and J. Han. Graph indexing: A frequent structure-based approach. In Proc. 2004 ACM-SIGMOD Int. Conf. Management of Data (SIGMOD’04), pages 335–346, Paris, France, June 2004.
[X. Yan, P. S. Yu, and J. Han. Substructure similarity search in graph databases. In Proc. 2005 ACM-SIGMOD Int. Conf. Management of Data (SIGMOD’05), pages 766–777, Baltimore, MD, June 2005.]


Huan,Wang, Bandyopadhyay, et al. successfully applied the frequent graph mining technique to study protein structural families. 
[J. Huan, W.Wang, D. Bandyopadhyay, J. Snoeyink, J. Prins, and A. Tropsha.Mining spatial motifs from protein structure graphs. In Proc. 8th Int. Conf. Research in Computational Molecular Biology (RECOMB), pages 308–315, San Diego, CA, March 2004.]

Koyuturk, Grama, and Szpankowski proposed a method to detect frequent subgraphs in biological networks. 
[M. Koyuturk, A. Grama, and W. Szpankowski. An efficient algorithm for detecting frequent subgraphs in biological networks. Bioinformatics, 20:I200–I207, 2004]


++ OLAP
Similarity search and OLAP in information networks has been studied by many 
[Tian, Y.;  Hankins, R.A.;  Patel, J.M.,  Efficient aggregation for graph summarization,   In:  Proc. 2008 ACM SIGMOD Int. Conf. Management of Data (SIGMOD’08)  Vancouver, British Columbia, Canada.  (June 2008), pp.  567–580]
[Chen, C.;  Yan, X.;  Zhu, F.;  Han, J.;  Yu, P.S.,  Graph OLAP: Towards online analytical processing on graphs,   In:  Proc. 2008 Int. Conf. Data Mining (ICDM’08)  Pisa, Italy.  (Dec. 2008), pp.  103–112.]



</text>

</document>

</document>

<?xml version="1.0"  encoding="ISO-8859-1" ?> 
<!DOCTYPE sys-ents [ <!ENTITY bibliography SYSTEM "bibliography.xml"> ]> 
<?xml-stylesheet type="text/xsl" href="../book.xsl"?>


<document>
&bibliography;
<title>Community Detection</title>

<text>
Specific aspects of the general idea of social group have led to more precise network definitions: cliques and their generalizations in graph theoretic terms, interacting communities, social circles, and structures of affiliation.
</text>

<text>
++ Identification of various kinds of subgraphs, i.e. communities (the coarse structure of the network)

Ideally, natural groups of heavily-connected nodes within a network


</text>

<text>
Applications: Web communities representing groups with a common interest, communities of named entities in text documents (e.g. people and organizations), social phenomena in e-mail communications, friendships in social networks...
</text>

<text>
1) people literally choose to people like them (sorting, what sociologists call homophily)
2) we also change our behavior to match that of people around us (peer effects)
both mechanisms create groups of people who look similar to one another

e.g. 
- Thomas Schelling's tipping model (racial segregation),
- Mark Granovetter (people's willingness to participate in some sort of collective behavior: riots, political uprisings,social movement...)
- John Miller and Scott Page's standing ovation model (a model of peer effects where you change your behavior to match that of others around you)
</text>


<text>
EXAMPLE: karate club social network

K: Social networks can also capture the sources of conflict within a group...
2 central [nodes] in the network of friendships, with many connections to other people. On the other hand, they are not
friends with each other, and in fact most people are only friends with one or the other
of them. These two central people were, respectively, the instructor and the student
founder of the club, and this pattern of noninteracting clusters was the most visible
symptom of a conflict between them and their factions that ultimately splintered the
group into two rival karate clubs... the theory of structural balance can be used to reason about how fissures in a network may
arise from the dynamics of conflict and antagonism at a purely local level.
</text>

<text>
GRAPH PARTITIONING, from <cite>Skiena 2008</cite>:

APPLICATIONS:

- Clustering: Graph partition also arises when we need to cluster the vertices into logical components. If edges link “similar” pairs of objects, the clusters remaining after partition should reflect coherent groupings.

- Divide and conquer arises in many divide-and-conquer algorithms, which gain their efficiency by breaking problems into equal-sized pieces such that the respective solutions can easily be reassembled. Minimizing the number of edges cut in the partition usually simplifies the task of merging

- Parallel algorithms. Consider the finite element method, which is used to compute the physical properties (such
as stress and heat transfer) of  geometric models. Parallelizing such calculations requires partitioning the models into equal-sized pieces whose interface is small. This is a graph-partitioning problem, since the topology of a geometric model is
usually represented using a graph.

- Data locality: Large graphs are often partitioned into reasonable-sized pieces to improve data locality 

- Drawing: or make less cluttered drawings.
</text>



<document>
<tag>community-detection-partitioning</tag>
<title>Graph partitioning</title>

++ http://en.wikipedia.org/wiki/Graph_partition

<text>
Non-overlapping communities...
</text>

<text>
GRAPH PARTITIONING HEURISTICS

- Local improvement heuristics for graph partitioning (.e.g sweep through the vertices, deciding
whether the size of the cut would improve if we moved this vertex over to the other
side) are due to Kernighan-Lin and Fiduccia-Mattheyses.

http://en.wikipedia.org/wiki/Kernighan%E2%80%93Lin_algorithm
[Kernighan, B. W.; Lin, Shen (1970). "An efficient heuristic procedure for partitioning graphs". Bell Systems Technical Journal 49: 291–307.]
+ One of the early fundamental works in the field. However, performance is O(n^2), so it is no longer commonly used.

http://en.wikipedia.org/wiki/Fiduccia-Mattheyses_algorithm
[CM Fiduccia, RM Mattheyses (1982). "A Linear-Time Heuristic for Improving Network Partitions". 19th Design Automation Conference]
On page(s): 175
Conference Location :  Las Vegas, NV, USA
ISSN :  0146-7123
Print ISBN: 0-89791-020-6
Digital Object Identifier :  10.1109/DAC.1982.1585498
+ A later variant that is linear time, very commonly used, both by itself and as part of multilevel partitioning...


- Multilevel partitioning

[G Karypis, V Kumar (1999). "A Fast and High Quality Multilevel Scheme for Partitioning Irregular Graphs". Siam Journal on Scientific Computing. ] Multi-level partitioning is the current state of the art. This paper also has good explanations of many other methods, and comparisons of the various methods on a wide variety of problems.

[Karypis, G., Aggarwal, R., Kumar, V., and Shekhar, S. (March 1999). "Multilevel hypergraph partitioning: applications in VLSI domain". IEEE Transactions on Very Large Scale Integration (VLSI) Systems 7 (1): pp. 69–79. doi:10.1109/92.748202]
Graph partitioning (and in particular, hypergraph partitioning) has many applications to IC design.

[S. Kirkpatrick, C. D. Gelatt Jr., and M. P. Vecchi (13 May 1983). "Optimization by Simulated Annealing". Science 220 (4598): 671–680. doi:10.1126/science.220.4598.671. PMID 17813860] Simulated annealing can be used as well.




- Spectral partitioning methods use sophisticated linear algebra techniques to
obtain a good partitioning. The spectral bisection method uses the second-lowest
eigenvector of the Laplacian matrix of the graph to partition it into two pieces. 


[Hagen, L. and Kahng, A.B. (September 1992). "New spectral methods for ratio cut partitioning and clustering". IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems 11,  (9): 1074–1085. doi:10.1109/43.159993]
+ a whole class of spectral partitioning methods, which use the Eigenvectors of the Laplacian of the connectivity graph. 

Spectral methods for graph partition are discussed in 
[Fan R.K. Chung. Spectral Graph Theory (CBMS Regional Conference Series in Mathematics, No. 92). American Mathematical Society, 1997.]
and
[A. Pothen, H. D. Simon, and K.-P. Liou. Partitioning sparse matrices with eigenvectors of graphs. SIAM J.  Matrix Analysis Appl., 11:430–452, 1990.]


When more than two components are desired, the partitioning heuristic should be applied recursively.


Empirical results on graph partitioning heuristics include 
[J. Berry and M. Goldberg. Path optimization and near-greedy analysis for graph partitioning: An empirical study. In Proc. 6th ACM-SIAM Symposium on Discrete Algorithms, pages 223–232, 1995.]
and
[K. Lang and S. Rao. Finding near-optimal cuts: An empirical evaluation. In Proc. 4th Annual ACM-SIAM Symposium on Discrete Algorithms (SODA
’93), pages 212–221, 1993.]

</text>

<document>
<tag>community-detection-kernighan-lin</tag>
<title>The Kernighan-Lin algorithm</title>

Kernighan–Lin is a O(n^2 log n ) heuristic algorithm for solving the graph partitioning problem. The algorithm has important applications in the layout of digital circuits and components in VLSI... 
</document>

<document>
<tag>community-detection-spectral</tag>
<title>Spectral partitioning</title>


<text>
Random walk process: move from a node to any of its d neighbors with equal probability p=1/d. A random walk will spend more time in areas with high density of links, indicating the existence of communities
</text>

<text>
Instead of tracing random walks, researchers resort to a mathematical operator that generates such random walks. This is more covenient in practice and more elegant in theory...  <cite>Newman 2006</cite>
</text>


<text>
Let us suppose that a network is divided into <eqn>c</eqn> different components. Then, if we order the vertices so that the first <eqn>n_1</eqn> correspond to the first component, the next <eqn>n_2</eqn> to the second component, and so on, the network Laplacian will be block diagonal. In fact, each block in the Laplacian will be the Laplacian of the corresponding component.
</text>

<text>
Taking into account the definition of the Laplacian
</text>

<equation>
l_{ij} = \delta_{ij}d_{i} - a_{ij}
</equation>

<text>
when we multiply the vector <eqn>\vec{1}</eqn>, made of ones, by the Laplacian, the ith element of the result will be
</text>

<equation>
\sum_j l_{ij} \times 1 = \sum_j ( \delta_{ij}d_{i} - a_{ij} ) = d_{i} - \sum_j a_{ij} = d_{i} - d{i} = 0
</equation>

<text>
That is, the vector <eqn>\vec{1}</eqn> is an eigenvector of the Laplacian with eigenvalue 0.
</text>

<text>
If we return to our disconnected network, we can easily obtain <eqn>c</eqn> eigenvectors with eigenvalue zero: the vectors with ones in the positions corresponding to vertices in a single component and zeros elsewhere. Actually, the number of zero eigenvalues is always exactly equal to the number of connected components. As a corollary, we can assert that the network is connected if and only if the second eigenvalue of the network Laplacian <eqn>\lambda_2</eqn> is non-zero. The second eigenvalue of the network Laplacian is called the algebraic connectivity of the network and it is also known as its spectral gap.
</text>

</document>

</document>



<document>
<tag>community-detection-modularity</tag>
<title>Modularity maximization methods</title>

<document>
<tag>community-detection-modularity-simple</tag>
<title>Simple modularity maximization</title>
</document>

<document>
<tag>community-detection-modularity-spectral</tag>
<title>Spectral modularity maximization</title>
</document>

</document>



<document>
<tag>community-detection-betweenness</tag>
<title>Betweenness-based methods</title>

</document>



<document>
<tag>community-detection-hierarchical</tag>
<title>Hierarchical clustering</title>

++ Nested structure of communities (hierarchically embedded communities) vs. non-overlapping communities

++ dendrogram...
ideally, the dendrogram 
- represents the most natural partition of a given network for every possible number of communities
- reflects the global organization of the network


<document>
<tag>community-detection-newman-girvan</tag>
<title>The Newman-Girvan algorithm</title>


Newman-Girvan algorithm <cite>Newman and Girvan 2004</cite>:
Uncover communities by removing the links that carry the highest numbers of shortest paths (using the link betweenness centrality)

1) Compute the betweenness centrality for all the links in the network

Repeat until no links remain:

2) Remove the link with the highest betweenness

3) Recompute betweenness centrality for the remaining links


NOTE: Recomputing betweenness in necessary (e.g. communities connected by two links, one with high initial betweenness, the other with low betweenness in the original network; after the first link removal, the second link betweenness will soar [and the link will be removed soon, hence uncovering the original communities]).

Reasonable results, albeit the algorithm might fail (e.g. three equal cliques connected by three links)

+ Once the dendrogram is built, the modularity measure Q can be used to determine the best possible partition (i.e. the number of partitions).

</document>


</document>




<document>
<tag>community-detection-overlapping</tag>
<title>Overlapping communities</title>


<text>
A single individual might belong to different communities...
</text>

cf. <cite>Palla et al. 2005</cite>

A community = A connected k-clique component
++ A k-clique is a fully-connected subgraph with k nodes. (e.g. triangles are 3-cliques
++ two k-cliques are adjacent if they share k-1 nodes 
(communities can overlap, but not by more than k-2 nodes)

Results depend on the value of k
- k too large: separate communities
- k too small: too large communities (k=2 == connected components)

</document>


<document>
<tag>community-detection-notes</tag>
<title>Bibliographic notes</title>

<text>
++ Textbook <cite>Newman 2010</cite>
</text>

<text>
Spectral properties <cite>Newman 2006</cite>
</text>

<text>
Hierarchy of smaller modules within large modules <cite>Blondel et al. 2008</cite>
</text>

<text>
Overlapping communities, where nodes can be central to more than one community <cite>Palla et al. 2005</cite>
</text>

<text>
++ Survey <cite>Fortunato 2010</cite>
</text>

<text>
++ Leskovec et al. 2010
 author = {Leskovec, Jure and Lang, Kevin J. and Mahoney, Michael},
 title = {Empirical comparison of algorithms for network community detection},
 booktitle = {Proceedings of the 19th International Conference on the World Wide Web},
 series = {WWW '10},
 year = {2010},
 isbn = {978-1-60558-799-8},
 location = {Raleigh, North Carolina, USA},
 pages = {631--640},
 doi = {http://doi.acm.org/10.1145/1772690.1772755},
</text>

<text>
Chayant Tantipathananandh, Tanya Berger-Wolf, David Kempe A Framework for Community Identification in Dynamic Social Networks. KDD 2007, San Jose, CA.

<cite>Newman 2006</cite>

R. Kumar, P. Raghavan, S. Rajagopalan, A. Tomkins. Trawling the web for emerging cyber-communities. 8th International World Wide Web Conference, May 1999.

A. Clauset. Finding local community structures in networks. Phys Rev E Stat Nonlin Soft Matter Phys. 2005 Aug;72(2 Pt 2):026132. 2005.

Hopcroft, O. Khan, B. Kulis, and B. Selman. Natural communities in large linked networks. In Proceedings of the 9th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, pages 541--546,

Ravi Kannan, Santos Vempala, Adrian Vetta, On clusterings: good, bad and spectral. Journal of the ACM (JACM) 51(3), 497--515, 2004.

E. A. Leicht, Petter Holme, and M. E. J. Newman, Vertex similarity in networks, Phys. Rev. E 73, 026120 (2006).

<cite>Newman and Girvan 2004</cite>

<cite>Newman 2004a</cite>

C. Faloutsos, K. McCurley and A. Tomkins. Fast Discovery of Connection Subgraphs. In Tenth ACM SIGKDD Conference, Seattle, WA, 2004.

Satu Elisa Schaeffer. Graph Clustering. Computer Science Review 1(1):27-64,2007.



Jure Leskovec, Kevin J. Lang, Anirban Dasgupta, Michael W. Mahoney:
"Community Structure in Large Networks: Natural Cluster Sizes and the Absence of Large Well-Defined Clusters"
Internet Mathematics, Volume 6, Issue 1, pages 29-123, 2009
DOI:10.1080/15427951.2009.10129177

</text>



<text>
<cite>Han and Kamber 2006</cite>, 568-571: 
<cite>Han and et al. 2011</cite>, Section 11.3, e.g. SCAN algorithm 

Most community mining methods assume that there is only one kind of relation in the
network, and moreover, the mining results are independent of the users’ information
needs. In reality, there may be multiple relations between objects, which collectively
formamultirelational social network (or heterogeneous social network). Relation selection
and extraction in such networks evaluates the importance of the different relations
with respect to user information provided as queries. In addition, it searches for a
combination of the existing relations that may reveal a hidden community within the
multirelational network.

- Bhattacharya and Getoor proposed a method for clustering linked data, which can be used to solve the data mining tasks of entity deduplication and group discovery. 
[I. Bhattacharya and L. Getoor. Iterative record linkage for cleaning and integration. In Proc. SIGMOD 2004 Workshop on Research Issues on Data Mining and Knowledge Discovery (DMKD’04), Paris, France, pages 11–18, June 2004.]

- A method for group discovery was proposed by Kubica, Moore, and Schneider 
[J. Kubica, A. Moore, and J. Schneider. Tractable group detection on large link data sets. In Proc. 3rd IEEE International Conference on Data Mining, pages 573–576, Melbourne, FL, Nov. 2003.]

- Mining newsgroups to partition discussion participants into opposite camps using quotation networks was proposed by Agrawal, Rajagopalan, Srikant, and Xu 
[R. Agrawal, S. Rajagopalan, R. Srikant, and Y. Xu. Mining newsgroups using networks arising from social behavior. In Proc. 2003 Int.WorldWideWeb Conf. (WWW’03), pages 529–535, New York, NY, May 2004.]

- The relation selection and extraction approach to community mining from multirelational networks was described in Cai, Shao, He, et al.
[D. Cai, Z. Shao, X. He, X. Yan, and J. Han. Community mining from multi-relational networks. In Proc. 2005 European Conf. Principles and Practice of Knowledge Discovery in Databases (PKDD’05), pages 445–452, Porto, Portugal, Oct. 2005.]


SURVEY
[Schaeffer, S.E.,  Graph clustering,   Computer Science Rev.  1  (2007) 27–64]


The SimRank measure of similarity
[Jeh, G.;  Widom, J.,  SimRank: A measure of structural-context similarity,   In:  Proc. 2002 ACM SIGKDD Int. Conf. Knowledge Discovery and Data Mining (KDD’02)  Edmonton, Alberta, Canada.  (July 2002), pp.  538–543]


the SCAN algorithm. 
[Xu, X.;  Yuruk, N.;  Feng, Z.;  Schweiger, T.A.J.,  SCAN: A structural clustering algorithm for networks,   In:  Proc. 2007 ACM SIGKDD Int. Conf. Knowledge Discovery in Databases (KDD’07)  San Jose, CA.  (Aug. 2007), pp.  824–833]

Sparsest cuts and approximation algorithms.
[Arora, S.;  Rao, S.;  Vazirani, U.,  Expander flows, geometric embeddings and graph partitioning,   J. ACM  56  (2)  (2009) 1–37]


CLUSTERING
[Newman, M.E.J.;  Girvan, M.,  Finding and evaluating community structure in networks,   Physical Rev. E  69  (2004) 113–128]
[Yin, X.;  Han, J.;  Yu, P.S.,  Cross-relational clustering with user's guidance,   In:  Proc. 2005 ACM SIGKDD Int. Conf. Knowledge Discovery in Databases (KDD’05)  Chicago, IL.  (Aug. 2005), pp.  344–353.]
[Kulis, B.;  Basu, S.;  Dhillon, I.;  Mooney, R.,  Semi-supervised graph clustering: A kernel approach,   Machine Learning  74  (2009) 1–22.]
[Sun, Y.;  Han, J.;  Zhao, P.;  Yin, Z.;  Cheng, H.;  Wu, T.,  RankClus: Integrating clustering with ranking for heterogeneous information network analysis,   In:  Proc. 2009 Int. Conf. Extending Data Base Technology (EDBT’09)  Saint Petersburg, Russia.  (Mar. 2009), pp.  565–576.]



EVOLUTION of social and information networks has been studied by many researchers, 
[Chakrabarti, D.;  Kumar, R.;  Tomkins, A.,  Evolutionary clustering,   In:  Proc. 2006 ACM SIGKDD Int. Conf. Knowledge Discovery in Databases (KDD’06)  Philadelphia, PA.  (Aug. 2006), pp.  554–560.]
[ Chi, Y.;  Song, X.;  Zhou, D.;  Hino, K.;  Tseng, B.L.,  Evolutionary spectral clustering by incorporating temporal smoothness,   In:  Proc. 2007 ACM SIGKDD Intl. Conf. Knowledge Discovery and Data Mining (KDD’07)  San Jose, CA.  (Aug. 2007), pp.  153–162.]
[Tang, L.;  Liu, H.;  Zhang, J.;  Nazeri, Z.,  Community evolution in dynamic multi-mode networks,   In:  Proc. 2008 ACM SIGKDD Int. Conf. Knowledge Discovery and Data Mining (KDD’08)  Las Vegas, NV.  (Aug. 2008), pp.  677–685]
[Xu, T.;  Zhang, Z.M.;  Yu, P.S.;  Long, B.,  Evolutionary clustering by hierarchical Dirichlet process with hidden Markov state,   In:  Proc. 2008 Int. Conf. Data Mining (ICDM’08)  Pisa, Italy.  (Dec. 2008), pp.  658–667.]
[Kim, M.-S.;  Han, J.,  A particle-and-density based evolutionary clustering method for dynamic networks,   In:  Proc. 2009 Int. Conf. Very Large Data Bases (VLDB’09)  Lyon, France.  (Aug. 2009).]
[Sun, Y.;  Tang, J.;  Han, J.;  Gupta, M.;  Zhao, B.,  Community evolution detection in dynamic heterogeneous information networks,   In:  Proc. 2010 KDD Workshop Mining and Learning with Graphs (MLG’10)  Washington, DC.  (July 2010).]


</text>

</document>


</document>

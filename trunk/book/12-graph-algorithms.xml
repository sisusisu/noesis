<?xml version="1.0"  encoding="ISO-8859-1" ?> 
<!DOCTYPE sys-ents [ 
  <!ENTITY bibliography   SYSTEM "bibliography.xml">
  <!ENTITY preliminaries  SYSTEM "12-graph-algorithms-1-preliminaries.xml">
  <!ENTITY representation SYSTEM "12-graph-algorithms-2-representation.xml">
  <!ENTITY exploration    SYSTEM "12-graph-algorithms-3-exploration.xml">
  <!ENTITY mst            SYSTEM "12-graph-algorithms-4-mst.xml">
  <!ENTITY paths          SYSTEM "12-graph-algorithms-5-paths.xml">
  <!ENTITY flows          SYSTEM "12-graph-algorithms-6-flows.xml">
  <!ENTITY isomorphism    SYSTEM "12-graph-algorithms-7-isomorphism.xml">
  <!ENTITY catalog        SYSTEM "12-graph-algorithms-8-catalog.xml">
  <!ENTITY notes          SYSTEM "12-graph-algorithms-9-notes.xml">
]> 
<?xml-stylesheet type="text/xsl" href="../book.xsl"?>


<document>
&bibliography;
<title>Graph Algorithms</title>


<text>
<q>The key to solving many algorithmic problems is to think of them in terms of graphs... it is amazing how often messy applied problems have a simple description and solution in terms of classical graph properties</q> <cite>Skiena 2008</cite>.
</text>


<text>
0. Propaedeutic
1. Graph representation
2. Graph exploration
3. Optimization problems: MST, shortest paths, maximum flow
4. Hard problems, e.g. graph isomorphisms
5. A catalog of graph algorithms
</text>


<!-- Sections -->

&preliminaries;
&representation;
&exploration;
&mst;
&paths;
&flows;
&isomorphism;
&catalog;
&notes;

</document>
